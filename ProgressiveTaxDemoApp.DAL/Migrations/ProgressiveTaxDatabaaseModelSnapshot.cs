// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgressiveTaxDemoApp.Database;

#nullable disable

namespace ProgressiveTaxDemoApp.Database.Migrations
{
    [DbContext(typeof(ProgressiveTaxDatabaase))]
    partial class ProgressiveTaxDatabaaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProgressiveTaxDemoApp.Domain.ProgressiveTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProgressiveTax", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            From = 0,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4790), new TimeSpan(0, 0, 0, 0, 0)),
                            Rate = 10
                        },
                        new
                        {
                            Id = 2,
                            From = 8351,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4792), new TimeSpan(0, 0, 0, 0, 0)),
                            Rate = 15
                        },
                        new
                        {
                            Id = 3,
                            From = 33951,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4793), new TimeSpan(0, 0, 0, 0, 0)),
                            Rate = 25
                        },
                        new
                        {
                            Id = 4,
                            From = 82251,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4793), new TimeSpan(0, 0, 0, 0, 0)),
                            Rate = 28
                        },
                        new
                        {
                            Id = 5,
                            From = 171151,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4794), new TimeSpan(0, 0, 0, 0, 0)),
                            Rate = 33
                        },
                        new
                        {
                            Id = 6,
                            From = 372951,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4795), new TimeSpan(0, 0, 0, 0, 0)),
                            Rate = 35
                        });
                });

            modelBuilder.Entity("ProgressiveTaxDemoApp.Domain.TaxCalculationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TaxType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaxCalculationType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4816), new TimeSpan(0, 0, 0, 0, 0)),
                            PostalCode = "7441",
                            TaxType = 0
                        },
                        new
                        {
                            Id = 2,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4818), new TimeSpan(0, 0, 0, 0, 0)),
                            PostalCode = "A100",
                            TaxType = 1
                        },
                        new
                        {
                            Id = 3,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4819), new TimeSpan(0, 0, 0, 0, 0)),
                            PostalCode = "7000",
                            TaxType = 2
                        },
                        new
                        {
                            Id = 4,
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4819), new TimeSpan(0, 0, 0, 0, 0)),
                            PostalCode = "1000",
                            TaxType = 0
                        });
                });

            modelBuilder.Entity("ProgressiveTaxDemoApp.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("DECIMAL(9,2)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d1a9d29-a2e3-4a4b-9745-2f557d34a439"),
                            Email = "example@example.com",
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4743), new TimeSpan(0, 0, 0, 0, 0)),
                            PostalCode = "7441",
                            Salary = 1000000m
                        },
                        new
                        {
                            Id = new Guid("f43eef22-1d53-4760-adb4-a8e62faf6efa"),
                            Email = "test@test.com",
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4753), new TimeSpan(0, 0, 0, 0, 0)),
                            PostalCode = "A100",
                            Salary = 130000m
                        },
                        new
                        {
                            Id = new Guid("11693434-356a-484d-93ed-e4d94c91ad73"),
                            Email = "test@example.com",
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4755), new TimeSpan(0, 0, 0, 0, 0)),
                            PostalCode = "7000",
                            Salary = 10000m
                        },
                        new
                        {
                            Id = new Guid("6bb18f27-8148-4144-9d5a-601cc3f4d3eb"),
                            Email = "example@test.com",
                            LastUpdated = new DateTimeOffset(new DateTime(2022, 5, 4, 12, 33, 25, 790, DateTimeKind.Unspecified).AddTicks(4756), new TimeSpan(0, 0, 0, 0, 0)),
                            PostalCode = "1000",
                            Salary = 100000m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
